import pandas as pd
import os

# 1Ô∏è‚É£ Caminho da pasta onde est√£o os arquivos Excel
pasta = "/Users/kristoferramina/phyton test"  # ‚¨ÖÔ∏è ajuste esse caminho conforme sua pasta
saida = os.path.join(pasta, "Resumo_Cirurgias.xlsx")

# 2Ô∏è‚É£ Listar todos os arquivos Excel
arquivos = [f for f in os.listdir(pasta) if f.endswith(".xlsx")]

if not arquivos:
    print("‚ö†Ô∏è Nenhum arquivo .xlsx encontrado na pasta.")
else:
    print(f"üìÇ {len(arquivos)} arquivos encontrados:\n" + "\n".join(arquivos))

# 3Ô∏è‚É£ DataFrame que armazenar√° todos os resultados
resumo_total = pd.DataFrame()

# 4Ô∏è‚É£ Processar cada arquivo
for arquivo in arquivos:
    caminho = os.path.join(pasta, arquivo)
    print(f"\nüìÑ Processando: {arquivo}")

    try:
        # Ler as planilhas
        servicos = pd.read_excel(caminho, sheet_name="Guia de Servi√ßos", header=None)
        extrato = pd.read_excel(caminho, sheet_name="Extrato", header=None)

        # Filtrar onde coluna J (√≠ndice 9) √© diferente de "CON"
        filtro = servicos[servicos[9] != "CON"]

        # Pegar valores √∫nicos da coluna B (√≠ndice 1)
        b_unicos = filtro[1].dropna().unique()

        # Criar DataFrame
        cirurgias = pd.DataFrame({"B": b_unicos})

        # Dicion√°rios equivalentes ao XVERWEIS
        mapa_servicos = dict(zip(servicos[1], servicos[6]))   # B ‚Üí G
        mapa_extrato = dict(zip(extrato[5], extrato[19]))     # F ‚Üí T

        # Adicionar colunas A e C
        cirurgias["A"] = cirurgias["B"].map(mapa_servicos)
        cirurgias["C"] = cirurgias["B"].map(mapa_extrato)

        # Formatar valores da coluna C como moeda
        cirurgias["C"] = cirurgias["C"].apply(
            lambda x: f"R$ {x:,.2f}".replace(",", "X").replace(".", ",").replace("X", ".")
            if pd.notnull(x)
            else ""
        )

        # Adicionar coluna com o nome do arquivo de origem
        cirurgias["Arquivo"] = arquivo

        # Adicionar ao resumo total
        resumo_total = pd.concat([resumo_total, cirurgias], ignore_index=True)

        print(f"‚úÖ {arquivo} processado com sucesso.")

    except Exception as e:
        print(f"‚ùå Erro ao processar {arquivo}: {e}")

# 5Ô∏è‚É£ Salvar o resumo consolidado em um novo Excel
if not resumo_total.empty:
    resumo_total.to_excel(saida, index=False)
    print(f"\nüèÅ Resumo completo salvo com sucesso em:\n{saida}")
else:
    print("‚ö†Ô∏è Nenhum dado foi processado ‚Äî verifique se os arquivos t√™m as planilhas corretas.")
